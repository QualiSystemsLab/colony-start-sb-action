name: 'Start Colony Sandbox'
description: 'Starts a sandbox in Colony and returns its ID'
author: 'Quali'
inputs:
  space:
    description: 'Colony space'
    required: true
  blueprint_name:
    description: 'Name of Blueprint'
    required: true
  sandbox_name:
    description: 'Colony Sandbox Name'
    required: false
  colony_token:
    description: 'Colony longterm token'
    required: true
  branch:
    required: true
    default: 'master'
  duration:
    required: false
    default: '120'
  timeout:
    required: false
    default: '0'
  artifacts:
    required: false
  inputs:
    required: false
  debug:
    required: false
    default: 'false'

outputs:
  sandbox_id:
    description: 'The ID of launched Colony Sandbox'
    value: ${{ steps.start-sandbox.outputs.sandbox-id }}

runs:
  using: "composite"
  steps:
    - id: extract_branch
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"

    - id: start-sandbox
      run: |
        sb_name=${{ inputs.sandbox_name }}
        [ -n $sb_name ] || sb_name=${{ inputs.blueprint_name }}

        #Run start command
        sb=$(${{ github.action_path }}/start.py "${{ inputs.blueprint_name }}" "$sb_name" ${{ inputs.duration }}
              "${{ steps.extract_branch.outputs.branch }}" "${{ inputs.inputs }}" "${{ inputs.artifacts }}")
        
        echo "::set-output name=sandbox-id::$(echo $sb)"
      env:
        COLONY_SPACE: ${{ inputs.space }}
        COLONY_TOKEN: ${{ inputs.colony_token }}
      shell: bash
          
    - id: wait-sandbox
      if: ${{ inputs.timeout != '0' }}
      run: |
        sandbox=${{ steps.start-sandbox.outputs.sandbox-id }}
        timeout=${{ inputs.timeout }}

        #Run wait command
        ${{ github.action_path }}/wait.py $sandbox $timeout
      shell: bash
